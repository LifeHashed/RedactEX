/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/m8pT7llRayY
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"
import { Card, CardHeader, CardTitle, CardDescription, CardContent } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Label } from "@/components/ui/label"
import { Textarea } from "@/components/ui/textarea"
import { Slider } from "@/components/ui/slider"
import React from "react"
import ParentComponent from "../ui/parentComp"



export function Component() {

  const [text, setText] = React.useState('');

  const handleClear = () => {
    setText(""); // Clear the text by setting state to an empty string
  };

  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-background text-foreground">
      <div className="max-w-3xl w-full mx-4 md:mx-0">
        <Card className="p-6 md:p-10">
          <CardHeader>
            <div className="flex items-center justify-between">
              <div className="flex items-center gap-4">
                <RedoIcon className="w-8 h-8" />
                <CardTitle className="text-2xl font-bold">Redact-EX</CardTitle>
              </div>
              <div className="flex items-center gap-2">
                {/*
                <Button variant="ghost" size="icon">
                  <SettingsIcon className="w-5 h-5" />
                  <span className="sr-only">Settings</span>
                </Button>
                
                <Button variant="ghost" size="icon">
                  <HandHelpingIcon className="w-5 h-5" />
                  <span className="sr-only">Help</span>
                </Button>
                */}
                
              </div>
            </div>
            <CardDescription className="mt-2">Secure and user-friendly data redaction tool</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="grid gap-6">
            <div>
                <Label htmlFor="redaction-level">Redaction Level</Label>
                <Slider id="redaction-level" min={0} max={100} defaultValue={[50]} className="mt-2" />
              </div>
              
              <ParentComponent/>
            </div>
          </CardContent>
        </Card>
        <div className="mt-6 text-center text-muted-foreground">
          <p>
            RE-DACT utilizes natural language processing and machine learning to preserve the structural and logical
            integrity of the output, while effectively removing key identifiers and other content that could potentially
            reveal the original data.
          </p>
          <p className="mt-2">
            Over time, the model will have the capability to generate realistic synthetic data in the desired format.
          </p>
        </div>
      </div>
    </div>
  )
}

function HandHelpingIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M11 12h2a2 2 0 1 0 0-4h-3c-.6 0-1.1.2-1.4.6L3 14" />
      <path d="m7 18 1.6-1.4c.3-.4.8-.6 1.4-.6h4c1.1 0 2.1-.4 2.8-1.2l4.6-4.4a2 2 0 0 0-2.75-2.91l-4.2 3.9" />
      <path d="m2 13 6 6" />
    </svg>
  )
}


function RedoIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M21 7v6h-6" />
      <path d="M3 17a9 9 0 0 1 9-9 9 9 0 0 1 6 2.3l3 2.7" />
    </svg>
  )
}


function SettingsIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z" />
      <circle cx="12" cy="12" r="3" />
    </svg>
  )
}
